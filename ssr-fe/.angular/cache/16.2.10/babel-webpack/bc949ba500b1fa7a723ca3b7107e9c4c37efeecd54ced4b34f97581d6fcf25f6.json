{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConvertService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = \"\";\n  }\n  convertYoutubeLink(link) {\n    return this.http.post(`${this.apiServerUrl}/convert`, link);\n  }\n  static #_ = this.ɵfac = function ConvertService_Factory(t) {\n    return new (t || ConvertService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConvertService,\n    factory: ConvertService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ConvertService","constructor","http","apiServerUrl","convertYoutubeLink","link","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/angeorgi/Projects/YoutubeConvertor/ssr-fe/src/app/services/convert.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IYoutubeLink } from '../interfaces/IYoutubeLink';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConvertService {\n\n  private apiServerUrl = \"\";\n\n  constructor(private http: HttpClient) { }\n\n  public convertYoutubeLink(link: IYoutubeLink): Observable<any> {\n    return this.http.post<void>(`${this.apiServerUrl}/convert`, link);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,YAAY,GAAG,EAAE;EAEe;EAEjCC,kBAAkBA,CAACC,IAAkB;IAC1C,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,GAAG,IAAI,CAACH,YAAY,UAAU,EAAEE,IAAI,CAAC;EACnE;EAAC,QAAAE,CAAA,G;qBARUP,cAAc,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdZ,cAAc;IAAAa,OAAA,EAAdb,cAAc,CAAAc,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}